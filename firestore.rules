
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users collection:
    // - Authenticated users can read their own document.
    // - Authenticated users can update their own document (e.g., profile info).
    // - User creation is handled by Firebase Auth; this allows setting initial data.
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null; // Allows creating user doc after signup
    }

    // EHCPDocuments collection:
    // - 'list' allows authenticated users to query the collection.
    //   The actual documents returned will be filtered by the query in the server action
    //   and further secured by the 'get' rule.
    // - 'get' allows a user to read a document if their UID matches associatedUserId OR if they are an admin.
    // - 'write' (create, update, delete) is restricted to admins.
    match /ehcpDocuments/{docId} {
      allow list: if request.auth != null;

      // Diagnostic: Temporarily simplify the get rule
      allow get: if request.auth != null &&
                    resource.data.associatedUserId == request.auth.uid;
      // Original get rule for reference (to be restored if this diagnostic step works):
      // allow get: if request.auth != null &&
      //               (resource.data.associatedUserId == request.auth.uid ||
      //                (exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
      //                 get(/databases/$(database)/documents/users/$(request.auth.uid)).data.get('isAdmin', false) == true));

      allow create, update, delete: if request.auth != null &&
                 (exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                  get(/databases/$(database)/documents/users/$(request.auth.uid)).data.get('isAdmin', false) == true);
    }

    // Add rules for other collections as needed here
  }
}
