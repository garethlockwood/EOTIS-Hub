
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Default deny all reads and writes
    match /{document=**} {
      allow read, write: if false;
    }

    // Users collection
    match /users/{userId} {
      // Allow users to read their own document
      allow get: if request.auth.uid == userId;
      // Allow users to update their own document (name, avatarURL, isMfaEnabled, mustChangePassword)
      // Disallow changing email, isAdmin, or createdAt directly
      allow update: if request.auth.uid == userId &&
                       request.resource.data.keys().hasOnly(['name', 'avatarURL', 'isMfaEnabled', 'mustChangePassword']) &&
                       (request.resource.data.name == null || request.resource.data.name is string) &&
                       (request.resource.data.avatarURL == null || request.resource.data.avatarURL is string) &&
                       (request.resource.data.isMfaEnabled == null || request.resource.data.isMfaEnabled is bool) &&
                       (request.resource.data.mustChangePassword == null || request.resource.data.mustChangePassword is bool);

      // Allow authenticated users to create their own user document upon signup/first login
      allow create: if request.auth.uid == userId &&
                       request.resource.data.email == request.auth.token.email &&
                       request.resource.data.keys().hasAll(['email', 'name', 'avatarURL', 'isMfaEnabled', 'mustChangePassword', 'isAdmin', 'createdAt']) &&
                       request.resource.data.isAdmin == false; // Ensure new users cannot set themselves as admin
    }

    // EHCP Documents
    match /ehcpDocuments/{docId} {
      // Allow authenticated users to list documents.
      // The query in the app should filter by associatedUserId.
      allow list: if request.auth != null;

      // Allow authenticated users to read a specific document if their UID matches the associatedUserId,
      // OR if they are an admin.
      allow get: if request.auth != null &&
                    (resource.data.associatedUserId == request.auth.uid ||
                     (
                       exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                       get(/databases/$(database)/documents/users/$(request.auth.uid)).data.get('isAdmin', false) == true
                     )
                    );

      // Allow admins to create, update, delete any EHCP document
      allow write: if request.auth != null &&
                      (
                        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.get('isAdmin', false) == true
                      );
    }
  }
}
