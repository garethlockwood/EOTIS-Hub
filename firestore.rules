
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users Collection
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // EHCP Documents Collection
    match /ehcpDocuments/{docId} {
      allow list: if request.auth.uid != null; // Check specific uid presence

      allow get: if request.auth != null &&
                   (resource.data.associatedUserId == request.auth.uid ||
                    (
                      request.auth.uid != null && // Ensure request.auth.uid itself is not null before using it in exists/get
                      exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.get('isAdmin', false) == true
                    )
                   );

      allow write: if request.auth != null &&
                     (
                       request.auth.uid != null && // Ensure request.auth.uid itself is not null
                       exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                       get(/databases/$(database)/documents/users/$(request.auth.uid)).data.get('isAdmin', false) == true
                     );
    }

    // Default deny all other paths
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
