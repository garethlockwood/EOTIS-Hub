rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users collection
    match /users/{userId} {
      // Anyone can create a user document (e.g., during signup)
      allow create: if request.auth != null;
      // Users can read their own document
      allow get: if request.auth != null && request.auth.uid == userId;
      // Users can update their own document (name, avatarURL, mustChangePassword, isMfaEnabled)
      // Admins can update any user document (e.g., to set isAdmin or mustChangePassword)
      allow update: if request.auth != null &&
                       (request.auth.uid == userId ||
                        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.get('isAdmin', false) == true));
      // Only admins can delete user documents (generally not recommended to allow user deletion)
      allow delete: if request.auth != null &&
                       (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.get('isAdmin', false) == true);
    }

    // EHCP Documents
    match /ehcpDocuments/{docId} {
      // DIAGNOSTIC: Allow any list operation temporarily
      allow list: if true; // VERY PERMISSIVE - FOR DIAGNOSTICS ONLY

      // Users can get their own documents, or admins can get any document.
      allow get: if request.auth != null &&
                    (resource.data.associatedUserId == request.auth.uid ||
                     (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.get('isAdmin', false) == true));

      // Only admins can create, update, delete EHCP documents
      allow create, update, delete: if request.auth != null &&
                                       (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.get('isAdmin', false) == true);
    }

    // Other collections (if any) would go here
    // Example: match /otherCollection/{otherDocId} {
    // allow read, write: if request.auth != null;
    // }
  }
}
